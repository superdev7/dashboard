version: 2

jobs:
  "python-2.7": &test-template
    docker:
      - image: circleci/python:2.7-stretch-node-browsers
        environment:
          REQUIREMENTS_FILE: .circleci/requirements/dev-requirements.txt
          PYLINTRC: .pylintrc

    steps:
      - checkout

      - run:
          name: ℹ️ CI Context
          command: |
            echo "TRIGGERER: ${CIRCLE_USERNAME}"
            echo "BUILD_NUMBER: ${CIRCLE_BUILD_NUM}"
            echo "BUILD_URL: ${CIRCLE_BUILD_URL}"
            echo "BRANCH: ${CIRCLE_BRANCH}"
            echo "RUNNING JOB: ${CIRCLE_JOB}"
            echo "JOB PARALLELISM: ${CIRCLE_NODE_TOTAL}"
            echo "CIRCLE_REPOSITORY_URL: ${CIRCLE_REPOSITORY_URL}"
            cat "$REQUIREMENTS_FILE" > reqs.txt
            echo $CIRCLE_JOB > circlejob.txt

      - restore_cache:
          key: py-{{ .Branch }}-{{ checksum "circlejob.txt" }}-{{ checksum "reqs.txt" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: 🚧 pip dev requirements
          command: |
            sudo pip install --upgrade virtualenv
            python -m venv venv || virtualenv venv
            . venv/bin/activate
            pip install -r $REQUIREMENTS_FILE --quiet
      - save_cache:
          key: py-{{ .Branch }}-{{ checksum "circlejob.txt" }}-{{ checksum "reqs.txt" }}-{{ checksum ".circleci/config.yml" }}
          paths:
              - "venv"

      - run:
          name: 🌸 linting
          command: |
            . venv/bin/activate
            pip install -e . --quiet
            pip list | grep dash
            flake8 dash setup.py
            flake8 --ignore=E123,E126,E501,E722,E731,F401,F841,W503,W504 --exclude=metadata_test.py tests
            pylint dash setup.py --rcfile=$PYLINTRC
            pylint tests/unit -d all -e C0410,C0411,C0412,C0413,W0109
            cd dash-renderer && npm install --ignore-scripts && npm run lint:test && npm run format:test

      - run:
          name: ⛑ Run unit tests
          command: |
            . venv/bin/activate
            mkdir test-reports
            pytest --junitxml=test-reports/junit.xml tests/unit
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

      - run:
          name: 🚧 build renderer
          command: |
              . venv/bin/activate
              cd dash-renderer
              npm install --ignore-scripts && npm run build:dev && npm run build
              pip install -e . --quiet

      - run:
          name: 🚧 install dependencies from latest master commit
          command: |
              git clone --depth 1 https://github.com/plotly/dash-core-components.git
              git clone --depth 1 https://github.com/plotly/dash-html-components.git
              git clone --depth 1 https://github.com/plotly/dash-table.git
              git clone --depth 1 https://github.com/plotly/dash-renderer-test-components
              . venv/bin/activate
              cd dash-core-components && npm install --ignore-scripts && npm run build && pip install -e . && cd ..
              cd dash-html-components && npm install --ignore-scripts && npm run build && pip install -e . && cd ..
              cd dash-table && npm install --ignore-scripts && npm run build && pip install -e . && cd ..
              cd dash-renderer-test-components && npm install --ignore-scripts && npm run build:all && pip install -e . && cd ..

      - run:
          name: ⚙️ run integration test
          command: |
            . venv/bin/activate
            pytest --junitxml=test-reports/junit_intg.xml tests/integration/

      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports


  "python-3.6":
    <<: *test-template
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
        environment:
          REQUIREMENTS_FILE: .circleci/requirements/dev-requirements.txt
          PYLINTRC: .pylintrc
          PERCY_ENABLE: 0

  "python-3.7":
    <<: *test-template
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          REQUIREMENTS_FILE: .circleci/requirements/dev-requirements-py37.txt
          PYLINTRC: .pylintrc37
          PERCY_ENABLE: 0


workflows:
  version: 2
  build:
    jobs:
      - "python-2.7"
      - "python-3.6"
      - "python-3.7"
{
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "private::format.black": "black dash tests --exclude metadata_test.py",
    "private::format.renderer": "cd dash-renderer && npm run format",
    "private::initialize.renderer": "cd dash-renderer && npm ci",
    "private::lint.black": "if [[ $PYLINTRC != '.pylintrc' ]]; then black dash tests --exclude metadata_test.py --check; fi",
    "private::lint.flake8": "flake8 --exclude=metadata_test.py dash tests",
    "private::lint.pylint-dash": "PYLINTRC=${PYLINTRC:=.pylintrc37} && pylint dash setup.py --rcfile=$PYLINTRC",
    "private::lint.pylint-tests": "PYLINTRC=${PYLINTRC:=.pylintrc37} && pylint tests/unit tests/integration -d all --rcfile=$PYLINTRC",
    "private::lint.renderer": "cd dash-renderer && npm run lint",
    "private::test.setup-nested": "cd \\@plotly/dash-generator-test-component-nested && npm ci && npm run build && pip install -e .",
    "private::test.setup-standard": "cd \\@plotly/dash-generator-test-component-standard && npm ci && npm run build && pip install -e .",
    "private::test.unit-dash": "PYTHONPATH=~/dash/tests/assets pytest tests/unit",
    "private::test.unit-renderer": "cd dash-renderer && npm run test",
    "private::test.integration-dash": "TESTFILES=$(circleci tests glob \"tests/integration/**/test_*.py\" | circleci tests split --split-by=timings) && pytest --headless --nopercyfinalize --junitxml=test-reports/junit_intg.xml ${TESTFILES}",
    "format": "run-s private::format.*",
    "initialize": "run-s private::initialize.*",
    "lint": "run-s private::lint.*",
    "test.integration": "run-s private::test.setup-* private::test.integration-*",
    "test.unit": "run-s private::test.unit-**"
  },
  "devDependencies": {
    "husky": "4.2.3"
  },
  "dependencies": {
    "npm-run-all": "4.1.5"
  }
}
